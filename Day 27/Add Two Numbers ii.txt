class Solution {
public:
    ListNode* reverseLL(ListNode* head) {
        ListNode* prev = nullptr;
        ListNode* curr = head;
        while (curr != nullptr) {
            ListNode* next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        l1 = reverseLL(l1);
        l2 = reverseLL(l2);
        int carry = 0;
        ListNode* ans = new ListNode(0);
        ListNode* current = ans;
        while (l1 != nullptr || l2 != nullptr || carry != 0) {
            int sum = carry;  
            if (l1 != nullptr) {
                sum += l1->val; 
                l1 = l1->next;  
            }
            if (l2 != nullptr) {
                sum += l2->val;
                l2 = l2->next; 
            }
            
            carry = sum / 10;  
            current->next = new ListNode(sum % 10);  
            current = current->next;
        }
        return reverseLL(ans->next);
    }
};
