class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if (p == nullptr && q == nullptr) return true;

        if (p != nullptr && q == nullptr) return false;
        if (q != nullptr && p == nullptr) return false;
        if (p->val != q->val) return false;
        
        if (p->left == nullptr && q->left != nullptr) return false;
        if (p->left != nullptr && q->left == nullptr) return false;
        if (p->right == nullptr && q->right != nullptr) return false;
        if (p->right != nullptr && q->right == nullptr) return false;

        bool left = true;
        bool right = true;

        if (p->left != nullptr && q->left != nullptr) 
            left = isSameTree(p->left, q->left);
        if (p->right != nullptr && q->right != nullptr) 
            right = isSameTree(p->right, q->right);

        return left && right;
    }
};